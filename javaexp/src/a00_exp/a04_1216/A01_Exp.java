package a00_exp.a04_1216;

/*
 1. 추상클래스를 상속하는 것과 일반클래스를 상속하는 궁극적인 차이점을 기술하세요.
 * 일반클래스 vs 일반클래스:
 	1) 상위 객체는 자체로 객체 생성이 가능하다
 	2) 하위에서 자유롭게 재활용 및 재정의 할 수 있다.
 * 추상클래스 vs 일반클래스: 
 	1) 상위 클래스는 자체로 객체 생성을 하지 못 한다.
 		- 하위 상속 클래스의 통일성 있는 사용을 목적으로 다형성 처리를 위해 만든 것이기 때문
 	2) 하위 클래스는 상위 클래스에 정의된 추상 메서드를 반드시 재정의해야 컴파일이 가능하다.
 	   추상 메서드의 강제성을 확보하여 하위 클래스의 재정의 메서드 통일성을 추구할 수 있다.
 
 2. 추상클래스에서는 두가지 유형의 메서드를 사용할 수 있다.(실제 메서드와 추상메서드)
 	하위클래스에서 이 클래스를 어떤 경우에 활용하는지를 예제를 통해서 기술하세요.
 * 실제메서드: 공통부분을 활용하여, 효과적으로 개발할 수 있다.
 * 추상메서드: 하위클래스에서는 상위 클래스에서 상속받아서, 기능으로 차이가 필요한 부분을 재정의하여 사용할 수 있다.
	 	    하위 객체에서 다형성을 추구할 수 있는 기능적인 내용을 처리한다.
 	
 4. 인터페이스와 추상클래스와의 차이를 멤버 위주로 기술하세요.
 * 인터페이스는 목적이 객체의 재활용을 위한 내용이 많다.
 	멤버:
	1) 필드: 일반 필드와 동일하게 사용되지만, 인터페이스는 항상 [public static final]이 default로 붙은 것과 동일한 작동을 한다.
			인터페이스는 static final 상수만 사용할 수 있다.
	2) 메서드
		- 추상메서드: 추상메서드를 활용하는 것은 동일하나, 인터페이스는 [public abstract]가 붙은 것과 동일한 작동을 한다.(즉, 생략 가능)
		- default 메서드: 인터페이스는 default로 명시한 메서드가 지원된다.
		- static 메서드: 인터페이스에서 객체생성없이 static 메서드를 활용할 수 있다.
 
 
 	- 추상클래스: 추상메서드를 선언하여 상속을 통해서 자손 클래스에서 완성하도록 유도하는 클래스.
 			   미완성 설계도라고도 표현함
 			   상속을 위한 클래스이기 때문에 따로 객체를 생성할 수 없다.
 	- 인터페이스: 추상클래스처럼 다른 클래스를 작성하는데 도움을 주는 목적으로 작성하는 클래스.
 			   기본 설계도라고 할 수 있음.
 			   클래스와 다르게 다중상속이 가능하다.
 	- 다중상속의 가능 여부에 따라 용도를 정한 것으로 생각됨.
 	- 모든 클래스가 인터페이스를 사용해서 기본 틀을 구성한다면 공통으로 필요한 기능들도 코든 클래스에서 오버라이딩해서 재정의해야하는 번거로움이 발생
 	  반대로 추상클래스만 사용하게 된다면 다중상속이 불가능해서 번거로움이 발생
 	  각각 다른 추상클래스를 상속하는데 공통된 기능이 필요하다면 해당 기능을 인터페이스로 작성해서 구현하는게 간편함.
 
	
 */
public class A01_Exp {

}
